// source: services/quotes/v1/quote_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.services.quotes.v1.AcceptQuoteRequest', null, global);
goog.exportSymbol('proto.services.quotes.v1.AcceptQuoteResponse', null, global);
goog.exportSymbol('proto.services.quotes.v1.GetQuoteToBuyUsdRequest', null, global);
goog.exportSymbol('proto.services.quotes.v1.GetQuoteToBuyUsdRequest.QuoteForCase', null, global);
goog.exportSymbol('proto.services.quotes.v1.GetQuoteToBuyUsdResponse', null, global);
goog.exportSymbol('proto.services.quotes.v1.GetQuoteToSellUsdRequest', null, global);
goog.exportSymbol('proto.services.quotes.v1.GetQuoteToSellUsdRequest.QuoteForCase', null, global);
goog.exportSymbol('proto.services.quotes.v1.GetQuoteToSellUsdResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.quotes.v1.GetQuoteToBuyUsdRequest.oneofGroups_);
};
goog.inherits(proto.services.quotes.v1.GetQuoteToBuyUsdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.quotes.v1.GetQuoteToBuyUsdRequest.displayName = 'proto.services.quotes.v1.GetQuoteToBuyUsdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.quotes.v1.GetQuoteToBuyUsdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.quotes.v1.GetQuoteToBuyUsdResponse.displayName = 'proto.services.quotes.v1.GetQuoteToBuyUsdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.quotes.v1.GetQuoteToSellUsdRequest.oneofGroups_);
};
goog.inherits(proto.services.quotes.v1.GetQuoteToSellUsdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.quotes.v1.GetQuoteToSellUsdRequest.displayName = 'proto.services.quotes.v1.GetQuoteToSellUsdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.quotes.v1.GetQuoteToSellUsdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.quotes.v1.GetQuoteToSellUsdResponse.displayName = 'proto.services.quotes.v1.GetQuoteToSellUsdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.quotes.v1.AcceptQuoteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.quotes.v1.AcceptQuoteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.quotes.v1.AcceptQuoteRequest.displayName = 'proto.services.quotes.v1.AcceptQuoteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.quotes.v1.AcceptQuoteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.quotes.v1.AcceptQuoteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.quotes.v1.AcceptQuoteResponse.displayName = 'proto.services.quotes.v1.AcceptQuoteResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.QuoteForCase = {
  QUOTE_FOR_NOT_SET: 0,
  AMOUNT_TO_SELL_IN_SATS: 1,
  AMOUNT_TO_BUY_IN_CENTS: 2
};

/**
 * @return {proto.services.quotes.v1.GetQuoteToBuyUsdRequest.QuoteForCase}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.prototype.getQuoteForCase = function() {
  return /** @type {proto.services.quotes.v1.GetQuoteToBuyUsdRequest.QuoteForCase} */(jspb.Message.computeOneofCase(this, proto.services.quotes.v1.GetQuoteToBuyUsdRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.quotes.v1.GetQuoteToBuyUsdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.quotes.v1.GetQuoteToBuyUsdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
amountToSellInSats: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
amountToBuyInCents: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
immediateExecution: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdRequest}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.quotes.v1.GetQuoteToBuyUsdRequest;
  return proto.services.quotes.v1.GetQuoteToBuyUsdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.quotes.v1.GetQuoteToBuyUsdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdRequest}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmountToSellInSats(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmountToBuyInCents(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setImmediateExecution(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.quotes.v1.GetQuoteToBuyUsdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.quotes.v1.GetQuoteToBuyUsdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getImmediateExecution();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional uint64 amount_to_sell_in_sats = 1;
 * @return {number}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.prototype.getAmountToSellInSats = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdRequest} returns this
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.prototype.setAmountToSellInSats = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.services.quotes.v1.GetQuoteToBuyUsdRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdRequest} returns this
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.prototype.clearAmountToSellInSats = function() {
  return jspb.Message.setOneofField(this, 1, proto.services.quotes.v1.GetQuoteToBuyUsdRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.prototype.hasAmountToSellInSats = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 amount_to_buy_in_cents = 2;
 * @return {number}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.prototype.getAmountToBuyInCents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdRequest} returns this
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.prototype.setAmountToBuyInCents = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.services.quotes.v1.GetQuoteToBuyUsdRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdRequest} returns this
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.prototype.clearAmountToBuyInCents = function() {
  return jspb.Message.setOneofField(this, 2, proto.services.quotes.v1.GetQuoteToBuyUsdRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.prototype.hasAmountToBuyInCents = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool immediate_execution = 3;
 * @return {boolean}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.prototype.getImmediateExecution = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdRequest} returns this
 */
proto.services.quotes.v1.GetQuoteToBuyUsdRequest.prototype.setImmediateExecution = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.quotes.v1.GetQuoteToBuyUsdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.quotes.v1.GetQuoteToBuyUsdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
quoteId: jspb.Message.getFieldWithDefault(msg, 1, ""),
amountToSellInSats: jspb.Message.getFieldWithDefault(msg, 2, 0),
amountToBuyInCents: jspb.Message.getFieldWithDefault(msg, 3, 0),
expiresAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
executed: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdResponse}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.quotes.v1.GetQuoteToBuyUsdResponse;
  return proto.services.quotes.v1.GetQuoteToBuyUsdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.quotes.v1.GetQuoteToBuyUsdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdResponse}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmountToSellInSats(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmountToBuyInCents(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExpiresAt(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExecuted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.quotes.v1.GetQuoteToBuyUsdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.quotes.v1.GetQuoteToBuyUsdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuoteId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmountToSellInSats();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAmountToBuyInCents();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getExecuted();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string quote_id = 1;
 * @return {string}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.prototype.getQuoteId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdResponse} returns this
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.prototype.setQuoteId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 amount_to_sell_in_sats = 2;
 * @return {number}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.prototype.getAmountToSellInSats = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdResponse} returns this
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.prototype.setAmountToSellInSats = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 amount_to_buy_in_cents = 3;
 * @return {number}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.prototype.getAmountToBuyInCents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdResponse} returns this
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.prototype.setAmountToBuyInCents = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 expires_at = 4;
 * @return {number}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdResponse} returns this
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool executed = 5;
 * @return {boolean}
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.prototype.getExecuted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.quotes.v1.GetQuoteToBuyUsdResponse} returns this
 */
proto.services.quotes.v1.GetQuoteToBuyUsdResponse.prototype.setExecuted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.QuoteForCase = {
  QUOTE_FOR_NOT_SET: 0,
  AMOUNT_TO_BUY_IN_SATS: 1,
  AMOUNT_TO_SELL_IN_CENTS: 2
};

/**
 * @return {proto.services.quotes.v1.GetQuoteToSellUsdRequest.QuoteForCase}
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.prototype.getQuoteForCase = function() {
  return /** @type {proto.services.quotes.v1.GetQuoteToSellUsdRequest.QuoteForCase} */(jspb.Message.computeOneofCase(this, proto.services.quotes.v1.GetQuoteToSellUsdRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.quotes.v1.GetQuoteToSellUsdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.quotes.v1.GetQuoteToSellUsdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
amountToBuyInSats: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
amountToSellInCents: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
immediateExecution: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdRequest}
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.quotes.v1.GetQuoteToSellUsdRequest;
  return proto.services.quotes.v1.GetQuoteToSellUsdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.quotes.v1.GetQuoteToSellUsdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdRequest}
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmountToBuyInSats(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmountToSellInCents(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setImmediateExecution(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.quotes.v1.GetQuoteToSellUsdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.quotes.v1.GetQuoteToSellUsdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getImmediateExecution();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional uint64 amount_to_buy_in_sats = 1;
 * @return {number}
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.prototype.getAmountToBuyInSats = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdRequest} returns this
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.prototype.setAmountToBuyInSats = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.services.quotes.v1.GetQuoteToSellUsdRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdRequest} returns this
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.prototype.clearAmountToBuyInSats = function() {
  return jspb.Message.setOneofField(this, 1, proto.services.quotes.v1.GetQuoteToSellUsdRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.prototype.hasAmountToBuyInSats = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 amount_to_sell_in_cents = 2;
 * @return {number}
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.prototype.getAmountToSellInCents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdRequest} returns this
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.prototype.setAmountToSellInCents = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.services.quotes.v1.GetQuoteToSellUsdRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdRequest} returns this
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.prototype.clearAmountToSellInCents = function() {
  return jspb.Message.setOneofField(this, 2, proto.services.quotes.v1.GetQuoteToSellUsdRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.prototype.hasAmountToSellInCents = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool immediate_execution = 3;
 * @return {boolean}
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.prototype.getImmediateExecution = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdRequest} returns this
 */
proto.services.quotes.v1.GetQuoteToSellUsdRequest.prototype.setImmediateExecution = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.quotes.v1.GetQuoteToSellUsdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.quotes.v1.GetQuoteToSellUsdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
quoteId: jspb.Message.getFieldWithDefault(msg, 1, ""),
amountToBuyInSats: jspb.Message.getFieldWithDefault(msg, 2, 0),
amountToSellInCents: jspb.Message.getFieldWithDefault(msg, 3, 0),
expiresAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
executed: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdResponse}
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.quotes.v1.GetQuoteToSellUsdResponse;
  return proto.services.quotes.v1.GetQuoteToSellUsdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.quotes.v1.GetQuoteToSellUsdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdResponse}
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmountToBuyInSats(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmountToSellInCents(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExpiresAt(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExecuted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.quotes.v1.GetQuoteToSellUsdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.quotes.v1.GetQuoteToSellUsdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuoteId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmountToBuyInSats();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAmountToSellInCents();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getExecuted();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string quote_id = 1;
 * @return {string}
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.prototype.getQuoteId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdResponse} returns this
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.prototype.setQuoteId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 amount_to_buy_in_sats = 2;
 * @return {number}
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.prototype.getAmountToBuyInSats = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdResponse} returns this
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.prototype.setAmountToBuyInSats = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 amount_to_sell_in_cents = 3;
 * @return {number}
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.prototype.getAmountToSellInCents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdResponse} returns this
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.prototype.setAmountToSellInCents = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 expires_at = 4;
 * @return {number}
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdResponse} returns this
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool executed = 5;
 * @return {boolean}
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.prototype.getExecuted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.quotes.v1.GetQuoteToSellUsdResponse} returns this
 */
proto.services.quotes.v1.GetQuoteToSellUsdResponse.prototype.setExecuted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.quotes.v1.AcceptQuoteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.quotes.v1.AcceptQuoteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.quotes.v1.AcceptQuoteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.quotes.v1.AcceptQuoteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
quoteId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.quotes.v1.AcceptQuoteRequest}
 */
proto.services.quotes.v1.AcceptQuoteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.quotes.v1.AcceptQuoteRequest;
  return proto.services.quotes.v1.AcceptQuoteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.quotes.v1.AcceptQuoteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.quotes.v1.AcceptQuoteRequest}
 */
proto.services.quotes.v1.AcceptQuoteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.quotes.v1.AcceptQuoteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.quotes.v1.AcceptQuoteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.quotes.v1.AcceptQuoteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.quotes.v1.AcceptQuoteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuoteId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string quote_id = 1;
 * @return {string}
 */
proto.services.quotes.v1.AcceptQuoteRequest.prototype.getQuoteId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.quotes.v1.AcceptQuoteRequest} returns this
 */
proto.services.quotes.v1.AcceptQuoteRequest.prototype.setQuoteId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.quotes.v1.AcceptQuoteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.quotes.v1.AcceptQuoteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.quotes.v1.AcceptQuoteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.quotes.v1.AcceptQuoteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.quotes.v1.AcceptQuoteResponse}
 */
proto.services.quotes.v1.AcceptQuoteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.quotes.v1.AcceptQuoteResponse;
  return proto.services.quotes.v1.AcceptQuoteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.quotes.v1.AcceptQuoteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.quotes.v1.AcceptQuoteResponse}
 */
proto.services.quotes.v1.AcceptQuoteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.quotes.v1.AcceptQuoteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.quotes.v1.AcceptQuoteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.quotes.v1.AcceptQuoteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.quotes.v1.AcceptQuoteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.services.quotes.v1);
